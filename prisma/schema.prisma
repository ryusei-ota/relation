// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

 generator nestgraphql {
   provider = "node node_modules/prisma-nestjs-graphql"
   output = "../src/@generated/prisma-nestjs-graphql"
   fields_Validator_from = "class-validator"
   fields_Validator_input = true
   decorate_1_type        = "CreateOne*Args"
   decorate_1_field       = data
   decorate_1_name        = ValidateNested
   decorate_1_from        = "class-validator"
   decorate_1_arguments   = "[]"
   decorate_2_type        = "CreateOne*Args"
   decorate_2_field       = data
   decorate_2_from        = "class-transformer"
   decorate_2_arguments   = "['() => {propertyType.0}']"
   decorate_2_name        = Type
 }

model User {
  /// @Field(() => ID)
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  posts   Post[]
  profile Profile?
}

model Profile {
  /// @Field(() => ID)
  id     Int    @id @default(autoincrement())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Post {
  /// @Field(() => ID)
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  title      String
  published  Boolean    @default(false)
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  categories Category[] @relation(references: [id])
}

model Category {
  /// @Field(() => ID)
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[] @relation(references: [id])
}